<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<!-- to see a good example of what might be in a parent most pom look here: 
		http://maven.apache.org/pom/asf/ This pom was based on the above. -->
	<groupId>com.ccc.parent</groupId>
	<artifactId>ccc-parent</artifactId>
	<version>1</version>
	<packaging>pom</packaging>
	<name>Cascade Computer Consulting</name>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<gpg.useagent>true</gpg.useagent>
	</properties>
	<build>
		<pluginManagement>
			<plugins>
				<!-- set versions of common plugins for reproducibility -->
				<plugin>
					<groupId>com.jayway.maven.plugins.android.generation2</groupId>
					<artifactId>android-maven-plugin</artifactId>
					<version>4.0.0-rc.2</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>2.6</version>
				</plugin>
				<plugin>
					<groupId>org.apache.cocoon</groupId>
					<artifactId>cocoon-maven-plugin</artifactId>
					<version>1.0.2</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven</groupId>
					<artifactId>maven-plugin</artifactId>
					<version>2.2.0</version>
				</plugin>
				<plugin>
					<groupId>org.mortbay.jetty</groupId>
					<artifactId>maven-jetty-plugin</artifactId>
					<version>6.1.26</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-eclipse-plugin</artifactId>
					<version>2.9</version>
				</plugin>
				<plugin>
					<groupId>org.apache.felix</groupId>
					<artifactId>maven-bundle-plugin</artifactId>
					<version>2.5.3</version>
					<extensions>true</extensions>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>wagon-maven-plugin</artifactId>
					<version>1.0-beta-4</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.3</version>
					<configuration>
						<source>1.8</source>
						<target>1.8</target>
					</configuration>
				</plugin>

				<!-- maven 3.1.0 superpom versions -->
				<plugin>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>1.8</version>
				</plugin>
				<plugin>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>2.5.3</version>
				</plugin>
				<plugin>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>2.10</version>
				</plugin>
				<plugin>
					<artifactId>maven-release-plugin</artifactId>
					<version>2.5.1</version>
				</plugin>

				<!-- these were not in pluginManagement in the default maven 3.1.0 effective 
					pom? -->

				<plugin>
					<artifactId>maven-clean-plugin</artifactId>
					<version>2.6.1</version>
				</plugin>
				<plugin>
					<artifactId>maven-install-plugin</artifactId>
					<version>2.5.2</version>
				</plugin>
				<plugin>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>2.8.2</version>
				</plugin>
				<plugin>
					<artifactId>maven-site-plugin</artifactId>
					<version>3.4</version>
				</plugin>

			</plugins>
		</pluginManagement>
		<!-- The following extension was with the wagon plugin, but this is not 
			allowed in profiles It seems to work here, but assume will collide if wagon-file 
			or other is desired -->
		<extensions>
			<extension>
				<groupId>org.apache.maven.wagon</groupId>
				<artifactId>wagon-ssh</artifactId>
			</extension>
		</extensions>
		<plugins>
		</plugins>
	</build>
	<profiles>
		<profile>
			<id>ccc-file-wagon</id>
			<activation>
				<property>
					<!-- name>ccc.ssh.wagon.upload</name -->
					<name>project.bundle.copy.todir</name>
					<!-- value>true</value -->
				</property>
			</activation>
		</profile>
		<profile>
			<id>ccc-ssh-wagon</id>
			<activation>
				<!-- for engineering push to targets (i.e. karaf), at any pom level set 
					the following variables for wagon upload to a place of your choice. If you're 
					looking at Chad's sample build structure, his settings are found in the ...\emit-networking\osgi-projects\pom.xml. 
					If you install (unzip) the Karaf deployment to your c:\ root these settings 
					will work for you as well. <properties> <emit.ssh.wagon.upload.to_url>file:///tools/apache-karaf-2.3.1/emitdoDeploy</emit.ssh.wagon.upload.to_url> 
					<emit.ssh.wagon.upload.from_dir>${project.build.directory}</emit.ssh.wagon.upload.from_dir> 
					<emit.ssh.wagon.upload.includes>*.jar</emit.ssh.wagon.upload.includes> </properties> 
					Then to activate for any given project, for command line: mvn clean install 
					-Demit.ssh.wagon.upload=true or for Eclipse, right click on the pom, or project, 
					select "Run As" then "Run Configurations...". Add a "Name:" for the run configuration 
					(project/attributeId), set the "Goals:" to install and hit the "Add..." button 
					for "Parameter Name/Value" and enter emit.ssh.wagon.upload for name and true 
					for value. Then always come to here and hit the "run" buttom to do and install 
					build with wagon copy to your destination. -->
				<property>
					<name>ccc.ssh.wagon.upload</name>
					<value>true</value>
				</property>
			</activation>
			<build>
				<!-- extensions> this is declared in this file at the outer <build> level 
					<extension> <groupId>org.apache.maven.wagon</groupId> <artifactId>wagon-ssh</artifactId> 
					</extension> </extensions -->
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>wagon-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>upload-jar-to-folder</id>
								<phase>install</phase>
								<goals>
									<goal>upload</goal>
								</goals>
								<configuration>
									<!-- fromFile>${project.build.directory}/${project.artifactId}-${project.version}.jar</fromFile -->
									<fromDir>${ccc.ssh.wagon.upload.from_dir}</fromDir>
									<includes>${ccc.ssh.wagon.upload.includes}</includes>
									<!-- toDir>${project.bundle.copy.to_dir}</toDir -->
									<url>${ccc.ssh.wagon.upload.to_url}</url>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
